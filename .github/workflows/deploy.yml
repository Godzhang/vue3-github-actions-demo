# 可选 - 工作流的名称，将显示在 GitHub 仓库的 "Actions" 标签中。如果省略此字段，将使用工作流文件的名称。
name: vue3-github-actions-demo

# 定义触发工作流的条件
on:
  push:
    branches:
      - master # 当 master 分支有代码提交时触发 
  # 这个选项可以使你手动在 Action tab 页面触发工作流
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 定义一个或多个作业，每个作业可以运行在不同的环境中
jobs:
  build:
    runs-on: ubuntu-latest
    # 每个作业由一系列步骤组成，这些步骤可以是 shell 命令、脚本或使用预构建的 Action
    steps:
      # 第一步：检出代码
      - name: Checkout code
        uses: actions/checkout@v4 # 引用 GitHub Marketplace 上的 Action
      
      - uses: pnpm/action-setup@v2 # 改为使用 pnpm
        with:
          version: 8

      # 第二步：设置 Node.js 环境（安装所需 Node 版本）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with: # 传递参数给 Action
          node-version: '18'  # 根据项目需要的 Node 版本来设置
          cache: 'pnpm'

      # 第三步：安装依赖
      - name: Install dependencies
        run: pnpm install

      # 第四步：打包构建项目
      - name: Build project
        run: pnpm run build

      ################# 以下是部署到 github pages ##################
      # - name: Setup Pages
      #   uses: actions/configure-pages@v3
      
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v2
      #   with:
      #     # Upload dist repository
      #     path: './dist'

      # - name: Deploy to GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v2
      ############################ end ###########################

      ############## 以下是部署到 github pages 第二种方案 ##########
      - name: Deploy 
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist # The folder the action should deploy.
      ############################ end ###########################

      ################# 以下是部署到自己的服务器 ##################
      # 第五步：通过 SSH 连接并部署到服务器
      # - name: Deploy to aliyun Server
      #   uses: appleboy/ssh-action@v0.1.6
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}  # 在 GitHub Secrets 中配置的服务器地址
      #     username: ${{ secrets.SERVER_USER }}  # 在 GitHub Secrets 中配置的服务器用户名
      #     key: ${{ secrets.SSH_PRIVATE_KEY }}  # 使用你之前添加的 SSH 私钥
      #     port: 22  # SSH 端口，默认是 22
      #     script: |
      #       cd /home/front/github-actions  # 替换为你服务器上项目存放的目录
      #       rm -rf *  # 删除原有文件
      #       tar -xzf build.tar.gz  # 解压新构建的文件
      ############################ end ###########################
